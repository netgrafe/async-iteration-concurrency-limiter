{
  "name": "async-iteration-concurrency-limiter",
  "version": "1.0.0",
  "description": "Run an async processor function over an array of values with limited concurrency, useful for working with large number of files.",
  "main": "index.js",
  "scripts": {
    "test": "mocha",
    "coverage": "nyc npm test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/netgrafe/async-iteration-concurrency-limiter.git"
  },
  "keywords": [
    "asnyc",
    "iteration",
    "promise",
    "concurrency",
    "limit",
    "limiter",
    "files",
    "ratelimit"
  ],
  "author": "Adam Graf",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/netgrafe/async-iteration-concurrency-limiter/issues"
  },
  "homepage": "https://github.com/netgrafe/async-iteration-concurrency-limiter#readme",
  "devDependencies": {
    "chai": "^4.2.0",
    "mocha": "^7.1.1",
    "nyc": "^15.0.1",
    "sinon": "^9.0.1",
    "sinon-chai": "^3.5.0"
  }
}
